@model CreateEditPostViewModel

@{
    ViewBag.Title = "Create Post";
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/tinymce")
}

@section Styles {
    @Styles.Render("~/createEditPost")
}

<div style="padding: 25px 15px;">
    <h2 class="text-bold">@ViewBag.Title</h2>

    <form class="form" enctype="multipart/form-data" method="post">
        <div class="form-horizontal">

            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "form-check-label text-bold control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Body, htmlAttributes: new { @class = "form-check-label text-bold control-label col-md-2" })
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Body, new { @class = "form-control", id = "Body", name = "Body", placeholder = "Post (Body)" })
                    @Html.ValidationMessageFor(model => model.Body, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.HeroImage, htmlAttributes: new { @class = "form-check-label text-bold control-label col-md-2" })
                <div class="col-md-10">
                    <label class="custom-file-upload">
                        <input class="custom-file-input" style="display: none;" type="file" name="@(nameof(Model.HeroImage))" />
                        <span>Upload A Hero Image</span>
                    </label>

                    @Html.ValidationMessageFor(model => model.HeroImage, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Published, htmlAttributes: new { @class = "form-check-label text-bold control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.Published)
                        @Html.ValidationMessageFor(model => model.Published, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-outline-primary" />
                </div>
            </div>
        </div>
    </form>

    <div>
        @Html.ActionLink("Discard Draft", "Index", new { }, new { @class = "btn btn-outline-danger" })
    </div>
</div>
